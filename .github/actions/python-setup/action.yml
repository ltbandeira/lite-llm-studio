name: python-setup
description: Checkout, caches (pip/HF), Python setup, and project installation
inputs:
  python-version:
    description: Python version
    default: "3.12"
    required: false
  pip-cache:
    description: Pip cache path
    default: ~/.cache/pip
    required: false
  hf-cache:
    description: Hugging Face cache path
    default: ~/.cache/huggingface/hub
    required: false
  working-directory:
    description: Directory where pyproject.toml is located
    default: "."
    required: false

runs:
  using: "composite"
  steps:
    - name: Set up Python ${{ inputs.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ inputs.python-version }}

    - name: Cache pip
      uses: actions/cache@v4
      with:
        path: ${{ inputs.pip-cache }}
        key: ${{ runner.os }}-pip-${{ inputs.python-version }}-${{ hashFiles('**/pyproject.toml', '**/poetry.lock', '**/requirements*.txt', '**/setup.cfg', '**/setup.py') }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ inputs.python-version }}-

    - name: Cache Hugging Face
      uses: actions/cache@v4
      with:
        path: ${{ inputs.hf-cache }}
        key: ${{ runner.os }}-hf-${{ hashFiles('**/pyproject.toml', '**/poetry.lock', '**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-hf-

    - name: Installation and reports/ creation
      shell: bash
      run: |
        python -m pip install --upgrade pip
        cd "${{ inputs.working-directory }}"
        if [ -f pyproject.toml ]; then
          pip install -e ".[dev]" || pip install -e .
          mkdir -p reports
        else
          echo "No pyproject.toml found; skipping installation."
        fi
